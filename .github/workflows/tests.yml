name: conda-auth tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  # detect whether any code changes are included in this PR
  changes:
    runs-on: ubuntu-latest
    permissions:
      # necessary to detect changes
      # https://github.com/dorny/paths-filter#supported-workflows
      pull-requests: read
    outputs:
      code: ${{ steps.filter.outputs.code }}
    steps:
      - uses: actions/checkout@v3
        # dorny/paths-filter needs git clone for push events
        # https://github.com/dorny/paths-filter#supported-workflows
        if: github.event_name != 'pull_request'
      - uses: dorny/paths-filter@v2.11.1
        id: filter
        with:
          filters: |
            code:
              - 'conda_auth/**'
              - 'tests/**'
              - '*.py'
              - 'recipe/**'
              - '.github/workflows/tests.yml'

  windows:
    needs: changes
    if: needs.changes.outputs.code == 'true'

    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.11"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          init-shell: >-
            powershell
          cache-environment: false
          cache-downloads: true
          post-cleanup: 'all'

      - name: micromamba info (pwsh)
        shell: pwsh
        run: micromamba info

      - name: Install dev dependencies
        shell: pwsh
        run: |
          micromamba install --file requirements.dev.txt --yes

      - name: micromamba list
        shell: pwsh
        run: micromamba list

      - name: Install conda-auth
        shell: pwsh
        run: |
          pip install -e .

      - name: Test with pytest
        shell: pwsh
        run: |
          pytest --doctest-modules --cov-report=xml --cov=conda_auth

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: ${{ runner.os }},${{ matrix.python-version }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  unix-like:
    needs: changes
    if: needs.changes.outputs.code == 'true'

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.11"]
        os: ["macos-latest", "ubuntu-latest"]

    steps:
      - uses: actions/checkout@v3

      - uses: mamba-org/setup-micromamba@v1
        with:
          generate-run-shell: true
          environment-file: environment.yml
          init-shell: >-
            bash
          cache-environment: false
          cache-downloads: true
          post-cleanup: 'all'

      - name: micromamba info
        shell: bash -el {0}
        run: micromamba info

      - name: Install dev dependencies
        shell: bash -el {0}
        run: |
          micromamba install --file requirements.dev.txt --yes

      - name: micromamba list
        shell: bash -el {0}
        run: micromamba list

      - name: Install conda-auth
        shell: bash -el {0}
        run: |
          pip install -e .

      - name: Test with pytest
        shell: micromamba-shell {0}
        run: |
          pytest --doctest-modules --cov-report=xml --cov=conda_auth

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: ${{ runner.os }},${{ matrix.python-version }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
